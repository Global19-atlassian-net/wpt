steps:
- powershell: |
    $pythonPath = 'C:\Python27'
    if (Test-Path -LiteralPath $pythonPath) {
        Write-Host "Deleting $pythonPath"
        Remove-Item -Force -Recurse $pythonPath
    }
    $pythonPath = 'C:\Python38'
    $pythonInstallerLogPath = 'python_installer.log'
    $installArgs = "/passive /log $pythonInstallerLogPath TargetDir=$pythonPath"
    if (Test-Path -LiteralPath $pythonPath) {
        Write-Host "Deleting $pythonPath"
        Remove-Item -Force -Recurse $pythonPath
        Write-Host "$pythonPath already exists, repair it"
        $installArgs = $installArgs + " /repair"
    }
    Write-Host "Downloading python installer exe"
    $downloadPath = 'python_installer.exe'
    Start-BitsTransfer -Source https://www.python.org/ftp/python/3.8.5/python-3.8.5-amd64.exe  -Destination $downloadPath
    $hash = (Get-FileHash $downloadPath).Hash.ToLower()
    $expectedHash = "cd427c7b17337d7c13761ca20877d2d8be661bd30415ddc17072a31a65a91b64"
    if ($hash.Equals($expectedHash)) {
      Write-Host "$downloadPath hash verified"
    } else {
      Throw "$downloadPath hash mismatch, got $hash, expected $expectedHash"
    }
    Write-Host "Before install, looking at disk space"
    $driveData = Get-WmiObject -Class win32_LogicalDisk -Filter "DeviceID = '$env:SystemDrive'"
    Write-Host "Disk space on $env:SystemDrive: ($($driveData.FreeSpace / 1GB) GB)"
    Write-Host "Before install, listing directories in C:\"
    Get-ChildItem -Directory "C:\"
    Write-Host "Before install, listing current dir"
    Get-ChildItem -File "."
    Write-Host "Logging cwd:"
    Get-Location
    Write-Host "Running $downloadPath with args $installArgs"
    $p = Start-Process -FilePath $downloadPath -Verb RunAs -ArgumentList $installArgs -PassThru -Wait
    Write-Host "$downloadPath finished. Exit code was: $($p.ExitCode)"
    Write-Host "After install, listing current dir"
    Get-ChildItem -File "."
  displayName: 'Install Python (Windows)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
- task: CopyFiles@2
  inputs:
    contents: 'python_installer.log'
    targetFolder: $(Build.ArtifactStagingDirectory)
- task: PublishBuildArtifacts@1
  inputs:
    pathToPublish: $(Build.ArtifactStagingDirectory)
    artifactName: PythonInstallLogs
- powershell: |
    Write-Host "Dumping log file"
    Get-Content -Path "python_installer.log"
    Write-Host "Dumping C: dir"
    Get-ChildItem -Directory "C:\"
    Write-Host "Dumping C:\Python38 dir"
    Get-ChildItem "C:\Python38"
    Write-Host "Dumping C:\Python38\Scripts dir"
    Get-ChildItem "C:\Python38\Scripts"
    Write-Host "Adding Python dirs to path"
    Write-Host "##vso[task.prependpath]C:\Python38"
    Write-Host "##vso[task.prependpath]C:\Python38\Scripts"
  displayName: 'Post-Install Python (Windows)'
  condition: and(succeeded(), eq(variables['Agent.OS'], 'Windows_NT'))
